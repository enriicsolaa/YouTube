name: YT Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macOS-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Check cache
      run: |
        echo upstream_heads=$(git ls-remote https://github.com/theos/theos | head -n 1 | cut -f 1)-$(git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1) >> $GITHUB_ENV

    - name: Use cache
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/theos
        key: ${{ runner.os }}-${{ env.upstream_heads }}
    
    - name: Prepare Theos
      uses: Randomblock1/theos-action@v1
      with:
        orion: 'false'
    
    - name: Prepare app headers
      run: |
        if [ ! -d "$THEOS/include/YouTubeHeader" ]; then
          echo "Installing app headers..."
          git clone https://github.com/PoomSmart/YouTubeHeader
          cp -r YouTubeHeader "$THEOS/include/"
          rm -r YouTubeHeader
        else
          echo "Headers already installed as theos libs."
        fi

    - name: Compile Tweaks
      run: |
        cd Tweaks
        for tweak in */; do
          echo "Compiling $tweak"
          cd "$tweak"
          git submodule update --init --recursive
          rm -f packages/*
          make package FINALPACKAGE=1
          echo "$tweak successfully compiled"
          cd ..
        done

    - name: Install pyzule
      run: bash -c "$(curl https://raw.githubusercontent.com/asdfzxcvbn/pyzule/main/install-pyzule.sh)"
    
    - name: Download base IPA
      run: wget -O base.ipa https://starfilesdl.com/279ae94974eb

    - name: Injection
      run: |
        echo "PATCH_COMMAND=pyzule -i base.ipa -f" >> $GITHUB_ENV
        cd Tweaks || exit 1
        for tweak in */; do
          cd "$tweak" || exit 1
          cd packages || exit 1
          for tweak_file in *; do
            echo "PATCH_COMMAND=${PATCH_COMMAND} Tweaks/$tweak/packages/$tweak_file" >> $GITHUB_ENV
          done
          cd ..
          cd ..
        done
        cd ..
        cd CompiledTweaks || exit 1
        for compiledt in *; do
          echo "PATCH_COMMAND=${PATCH_COMMAND} CompiledTweaks/$compiledt" >> $GITHUB_ENV
        done
        cd ..
        cd Extensions || exit 1
        for ext in */; do
          echo "PATCH_COMMAND=${PATCH_COMMAND} Extensions/$ext" >> $GITHUB_ENV
        done
        cd ..
        echo "PATCH_COMMAND=${PATCH_COMMAND} -o patched.ipa" >> $GITHUB_ENV
        echo $PATCH_COMMAND
        echo "Hecho!"